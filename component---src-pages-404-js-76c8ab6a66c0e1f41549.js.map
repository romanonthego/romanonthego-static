{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Layout/fonts/overpass-mono.woff2","webpack:///./src/components/Layout/header.js","webpack:///./src/components/Layout/global.js","webpack:///./src/components/Layout/index.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_Layout__WEBPACK_IMPORTED_MODULE_1__","NotFoundPage","a","createElement","m","module","exports","require","default","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","gatsby_browser_entry","to","injectGlobal","_templateObject","reset","font","dotColor","Overlay","styled","div","withConfig","displayName","componentId","Layout","Fragment","Helmet_default","title","meta","name","content","lang","header","node"],"mappings":"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","file":"component---src-pages-404-js-76c8ab6a66c0e1f41549.js","sourcesContent":["import React from 'react'\nimport Layout from '../components/Layout'\n\nconst NotFoundPage = () => (\n  <Layout>\n    <h1>NOT FOUND</h1>\n    <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n  </Layout>\n)\n\nexport default NotFoundPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = \"data:font/woff2;base64,\"","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Header = ({ siteTitle }) => (\n  <div>\n    <div>\n      <Link to=\"/\">{siteTitle}</Link>\n    </div>\n  </div>\n);\n\nexport default Header;\n","import { injectGlobal } from 'styled-components';\nimport reset from 'styled-reset';\nimport font from './fonts/overpass-mono.woff2';\n\ninjectGlobal`\n  ${reset}\n\n  @font-face {\n    font-family: 'Overpass Mono';\n    font-weight: 300;\n    font-style: 'normal';\n    src: local('Overpass Mono'), local('Overpass-Mono'), url(${font}) format(\"woff2\");\n    font-display: swap;\n  }\n\n  *, *:before, *:after {\n    box-sizing: border-box;\n    font-weight: normal;\n    font-style: normal;\n    font-family: 'Overpass Mono', 'Courier New', Courier, monospace;\n    font-size: 16px;\n    line-height: 20px;\n    color: white;\n  }\n  \n  body {\n    font-family: 'Overpass Mono', 'Courier New', Courier, monospace;\n    font-size: 16px;\n    line-height: 20px;\n    color: white;\n    background-color: #12151E;\n\n    @media (-webkit-min-device-pixel-ratio: 2) {\n      text-shadow: 0.5px 0 0 red, -0.5px 0 0 cyan;\n    }\n  }\n\n  h1 {\n    font-size: 24px;\n    font-weight: 300;\n    line-height: 32px;\n    margin-bottom: 24px;\n  }\n\n  a {\n    position: relative;\n    color: white;\n    text-decoration: underline;\n\n    &:hover {\n      color: #12151E;\n      background-color: white;\n      text-decoration: none;\n    }\n  }\n\n  input {\n    outline: none;\n    box-shadow: none;\n  }\n\n  button {\n    outline: none;\n    border: none;\n    background-color: white;\n    color: #12151E;\n    padding: 10px 5px;\n\n    &:disabled {\n      opacity: 0.6;\n      cursor: not-allowed;\n    }\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport styled from 'styled-components';\nimport Header from './header';\nimport './global';\n\nconst dotColor = 'rgba(0, 0, 0, 0.05)';\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  pointer-events: none;\n  background-image: linear-gradient(45deg, ${dotColor} 25%, transparent 25%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0.1) 25%, transparent 25%),\n    linear-gradient(45deg, transparent 75%, ${dotColor} 75%), linear-gradient(-45deg, transparent 75%, ${dotColor} 75%);\n  background-size: 2px 2px;\n  background-position: 0 0, 1px 0, 1px -1px, 0px 1px;\n  background-blend-mode: multiply;\n  z-index: 9999;\n`;\n\nconst Layout = ({ children }) => (\n  <>\n    <Helmet\n      title=\"romanonthego.rocks\"\n      meta={[\n        { name: 'description', content: 'romanonthegos person website' },\n        { name: 'keywords', content: 'pesonal' },\n      ]}\n    >\n      <html lang=\"en\" />\n    </Helmet>\n    <Header siteTitle=\"romanonthego.rocks\" />\n    <Overlay />\n    <div>{children}</div>\n  </>\n);\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}